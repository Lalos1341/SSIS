<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/11/2019 5:09:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MEXSIST006"
  DTS:CreatorName="MEXSIST006\emiranda"
  DTS:DTSID="{E3FC1AC9-650B-4B7C-9758-7B1E75C549D7}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2058"
  DTS:ObjectName="SSIS_SSRS"
  DTS:PackageType="5"
  DTS:VersionBuild="26"
  DTS:VersionGUID="{2EE547A9-A2A2-46E9-9528-3D451FC8323B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FB9BDE3-6225-43CA-80F9-957292D90597}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Folder_Destination">
      <DTS:VariableValue
        DTS:DataType="8">C:\SSIS_Development</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{225BB50C-EBDF-47AC-9BB4-7ECA703C89E0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportParameter">
      <DTS:VariableValue
        DTS:DataType="8">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8740C62-8B9C-4773-9E1D-089164CC748D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\emiranda\source\repos\Reporte_prueba2_SinWizard\Reporte_prueba2_SinWizard\bin\Debug</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ejecutar SSRS"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Tarea Script"
      DTS:DTSID="{CA329F84-453E-48A4-B0C7-F2A2257DB8AF}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ejecutar SSRS"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_48f665c5ce7f48c1ae7ab664430e6241"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Folder_Destination,User::ReportParameter">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Settings.get_Default():ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Sett" +
    "ings")]

namespace ST_48f665c5ce7f48c1ae7ab664430e6241.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_48f665c5ce7f48c1ae7ab664430e6241.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a906264a-3595-42d7-a4a4-c1ad48d1f119}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_48f665c5ce7f48c1ae7ab664430e6241</RootNamespace>
    <AssemblyName>ST_48f665c5ce7f48c1ae7ab664430e6241</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
#endregion

namespace ST_48f665c5ce7f48c1ae7ab664430e6241
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            var reportserver = "http://mexsist006:8080/ReportServer";
            var reportfolder = "Rep_Prueba2";
            var reportname = "";
            var reportparameter = Dts.Variables["ReportParameter"].Value.ToString();
            var reportrenderingformat = "";

            string url, destination;
            destination = Dts.Variables["Folder_Destination"].Value.ToString() + "\\" + "Report_" + Dts.Variables["ReportParameter"].Value.ToString() + "_" + DateTime.Now.ToString("yyyyMMdd") + ".xls";
            //url = "http://mexsist006:8080/ReportServer?/Rep_Prueba2:Command=Render&Productkey=" + Dts.Variables["ReportParameter"].Value.ToString() + "&rs:Format=EXCEL";
            //url = "http://mexsist006:8080/ReportServer?/Rep_Prueba2/Repor2_Prueba:Command=Render&Productkey=" + Dts.Variables["ReportParameter"].Value.ToString() + "&rs:Format=EXCEL";
            url = "http://mexsist006:8080/ReportServer?/Rep_Prueba2/Repor2_Prueba&rs:Command=Render&rs:Format=EXCEL";
            

            //destination = Dts.Variables("Folder_Destination").Value.ToString() + "\" + "Report_" + Dts.Variables("ReportParameter").Value.ToString() + "_" + Format(Now, "yyyyMMdd") + ".xls";
            //url = "http://localhost:8080/ReportServer?/MyReports/SSIS_Execute_SSRS_Report&rs:Command=Render&Productkey=" + Dts.Variables("ReportParameter").Value.ToString + "&rs:Format=EXCEL";
            SaveFile(url, destination, Dts.Variables["Folder_Destination"].Value.ToString() + "\\ReporteExceltest1.xls");

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        private void SaveFile(string URL, string Destination, string path2)
        {
            //FUNIONAL
            var licount = 1;
            byte[] laBytes = new byte[256];
            FileStream fstr = new FileStream(Destination, FileMode.Create, FileAccess.Write);
            WebRequest server = WebRequest.Create(URL);
            server.Credentials = System.Net.CredentialCache.DefaultCredentials;
            server.Timeout = 600000;
            server.Method = "GET";

            HttpWebResponse ws = (HttpWebResponse)server.GetResponse();
            var stream = ws.GetResponseStream();
            StreamReader reader = new StreamReader(stream);
            do
            {
                licount = stream.Read(laBytes, 0, 256);
                fstr.Write(laBytes, 0, licount);
            } while (licount > 0);
            fstr.Flush();
            fstr.Close();


            //Stream str = ws.GetResponseStream();
            //byte[] inBuf = new byte[100000];
            //int bytesToRead = (int)inBuf.Length;
            //int bytesRead = 0;
            //while (bytesToRead > 0)
            //{
            //    int n = str.Read(inBuf, bytesRead, bytesToRead);
            //    if (n == 0)
            //        break;
            //    bytesRead += n;
            //    bytesToRead -= n;
            //}
            //FileStream fstr = new FileStream("ReporteExceltest1.xls", FileMode.OpenOrCreate,FileAccess.Write);
            //fstr.Write(inBuf, 0, bytesRead);
            //str.Close();
            //fstr.Close();

            //WebResponse response = null;
            //Stream remoteStream = null;
            //Stream localStream = null;
            //int bytesProcessed = 0;
            //// Create a request for the specified remote file name
            //WebRequest request = WebRequest.Create(URL);
            //request.Credentials = System.Net.CredentialCache.DefaultCredentials;
            //request.Timeout = 600000;
            //request.Method = "GET";
            //if (request != null)
            //{
            //    // Send the request to the server and retrieve the
            //    // WebResponse object 
            //    response = request.GetResponse();
            //    if (response != null)
            //    {
            //        // Once the WebResponse object has been retrieved,
            //        // get the stream object associated with the response's data
            //        remoteStream = response.GetResponseStream();

            //        // Create the local file
            //        localStream = File.Create(Dts.Variables["Folder_Destination"].Value.ToString() + "\\ReporteExceltest1.xls");

            //        // Allocate a 1k buffer
            //        byte[] buffer = new byte[1024];
            //        int bytesRead;

            //        // Simple do/while loop to read from stream until
            //        // no bytes are returned
            //        do
            //        {
            //            // Read data (up to 1k) from the stream
            //            bytesRead = remoteStream.Read(buffer, 0, buffer.Length);

            //            // Write the data to the local file
            //            localStream.Write(buffer, 0, bytesRead);

            //            // Increment total bytes processed
            //            bytesProcessed += bytesRead;
            //        } while (bytesRead > 0);
            //    }
            //}

            //using (FileStream fs = File.Open(Destination, FileMode.OpenOrCreate, FileAccess.ReadWrite))
            //{
            //    //FtpWebRequest ftp = (FtpWebRequest)FtpWebRequest.Create("ftp://" + Server + ":" + Port + "/" + fileName);
            //    WebRequest server = WebRequest.Create(URL);
            //    //ftp.Credentials = new NetworkCredential(Login, Password);
            //    server.Credentials = System.Net.CredentialCache.DefaultCredentials;
            //    server.Timeout = 600000;
            //    server.Method = "GET";

            //    var res = server.GetResponse();
            //    var bufer = res.GetResponseStream();
            //    byte[] buff = new byte[bufer.Length];
            //    fs.Write(buff, 0, buff.Length);
            //    fs.Close();



            //    //ftp.ContentLength = fs.Length;
            //    //ftp.Proxy = null;
            //    //byte[] buff = new byte[bufer.Length];
            //    //fs.Read(buff, 0, buff.Length);
            //    //fs.Close();
            //    //Stream ftpstream = ftp.GetRequestStream();
            //    //ftpstream.Write(buff, 0, buff.Length);
            //    //ftpstream.Close();
            //}

            //WebRequest server = WebRequest.Create(URL);
            //server.Credentials = System.Net.CredentialCache.DefaultCredentials;
            //server.Timeout = 600000;
            //server.Method = "GET";

            //int contentLen;
            //int buffLength = 2048;
            //byte[] buff = new byte[buffLength];
            //using (FileStream fs = new FileStream(FilePath, FileMode.Create, FileAccess.Write, FileShare.None))
            //{
            //    HttpWebResponse response = (HttpWebResponse)server.GetResponse();

            //    // obtener el stream retornado por el servidor
            //    Stream stream = response.GetResponseStream();

            //    // Leer del buffer 2kb cada vez
            //    contentLen = stream.Read(buff, 0, buffLength);

            //    // mientras existan datos en el buffer
            //    while (contentLen != 0)
            //    {
            //        // escribir el contenido en el stream
            //        fs.Write(buff, 0, contentLen);
            //        contentLen = stream.Read(buff, 0, buffLength);
            //    }
            //}
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_48f665c5ce7f48c1ae7ab664430e6241</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_48f665c5ce7f48c1ae7ab664430e6241</msb:DisplayName>
    <msb:ProjectId>{BB686259-C061-41A0-8E26-60EFD7AE46D4}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_48f665c5ce7f48c1ae7ab664430e6241.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
    <msb:Breakpoint Include="8eda4ddc96a94e348e8401d3814e6265">
      <msb:FileName>ScriptMain.cs</msb:FileName>
      <msb:LineNumber>111</msb:LineNumber>
      <msb:ColumnNumber>13</msb:ColumnNumber>
      <msb:Enabled>True</msb:Enabled>
      <msb:ConditionType>1</msb:ConditionType>
      <msb:Condition>
      </msb:Condition>
      <msb:Language>C#</msb:Language>
      <msb:HitCountType>1</msb:HitCountType>
      <msb:HitCountTarget>1</msb:HitCountTarget>
    </msb:Breakpoint>
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_48f665c5ce7f48c1ae7ab664430e6241")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_48f665c5ce7f48c1ae7ab664430e6241")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_48f665c5ce7f48c1ae7ab664430e6241.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_48f665c5ce7f48c1ae7ab664430e6241.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_48f665c5ce7f48c1ae7ab664430e6241.dll">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
5AQQADEA5AQQADkA5AQQAEEA5AQQAEkA5AQQAFEA5AQQAFkA5AQQAGEA5AQQAGkA5AQGAJkA5AQG
AMEA5AQVANEA5AQGAHEAFAYiANkAtgUnAOEAQwQsAOkAVQMyAKEAfwM2AHkAdQY6AHkAfwM/APEA
KgZEAPEAKgZKANkATwYBAIEA5ARaABEBlQFlABkB6gVsABEB2gVyABEBaQYBABEBdwAQABEBgwF5
ACkBMQR/ADkB5ASEAIkAcgCKAIkAsQGSAIkAiAMGAIkAjwEGAHEA5AQGAKEA5AQGAEEBxgCaAEEB
fQajAKkA5ASpAMkA5AQGAAgAFADDAAgAGADIACkAcwA3AS4ACwAPAS4AEwAYAS4AGwA3AS4AIwBA
AS4AKwBpAS4AMwBpAS4AOwBpAS4AQwBAAS4ASwBvAS4AUwBpAS4AWwCGAUMAYwDIAEkAcwA3AWEA
ewDIAGMAawDIABsAUAADAAEABAADAAAA1AQAAQAANwEFAQAARwYKAQIABQADAAIABgAFAAEABwAF
AAIACAAHAASAAAABAAAAVxwpgAAAAAAAAAEAAAAEAAAAAAAAAAAAAACxAGkAAAAAAA4AAAAAAAAA
AAAAALoAjgMAAAAABAAAAAAAAAAAAAAAsQBMBAAAAAAOAAAAAAAAAAAAAAC6AEIAAAAAAAAAAAAB
AAAANQUAAAUAAgAAAAAAAFNUXzQ4ZjY2NWM1Y2U3ZjQ4YzFhZTdhYjY2NDQzMGU2MjQxAHBhdGgy
ADxNb2R1bGU+AFVSTABTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZh
bHVlX18AbXNjb3JsaWIAUmVhZABzZXRfTWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBGaWxlTW9kZQBD
cmVkZW50aWFsQ2FjaGUAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAU2F2ZUZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBl
AEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNj
cmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBIdHRwV2ViUmVzcG9u
c2UAR2V0UmVzcG9uc2UAQ2xvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAFdyaXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBCeXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAEZsdXNoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF80OGY2NjVjNWNlN2Y0OGMxYWU3YWI2NjQ0MzBlNjI0MS5kbGwARmlsZVN0
cmVhbQBHZXRSZXNwb25zZVN0cmVhbQBnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAERlc3RpbmF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEN1bHR1cmVJbmZvAFN0cmVhbVJlYWRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ4ZjY2NWM1Y2U3ZjQ4YzFh
ZTdhYjY2NDQzMGU2MjQxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF80OGY2NjVjNWNlN2Y0OGMxYWU3YWI2NjQ0MzBlNjI0MS5Qcm9wZXJ0aWVzAGdldF9W
YXJpYWJsZXMAU2V0dGluZ3MASUNyZWRlbnRpYWxzAHNldF9DcmVkZW50aWFscwBnZXRfRGVmYXVs
dENyZWRlbnRpYWxzAEZpbGVBY2Nlc3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAQ29u
Y2F0AE9iamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFdlYlJlcXVl
c3QAc2V0X1RpbWVvdXQAZ2V0X05vdwBnZXRfQXNzZW1ibHkAAAAAH1IAZQBwAG8AcgB0AFAAYQBy
AGEAbQBlAHQAZQByAAAlRgBvAGwAZABlAHIAXwBEAGUAcwB0AGkAbgBhAHQAaQBvAG4AABFcAFIA
ZQBwAG8AcgB0AF8AAANfAAAReQB5AHkAeQBNAE0AZABkAAAJLgB4AGwAcwAAgMFoAHQAdABwADoA
LwAvAG0AZQB4AHMAaQBzAHQAMAAwADYAOgA4ADAAOAAwAC8AUgBlAHAAbwByAHQAUwBlAHIAdgBl
AHIAPwAvAFIAZQBwAF8AUAByAHUAZQBiAGEAMgAvAFIAZQBwAG8AcgAyAF8AUAByAHUAZQBiAGEA
JgByAHMAOgBDAG8AbQBtAGEAbgBkAD0AUgBlAG4AZABlAHIAJgByAHMAOgBGAG8AcgBtAGEAdAA9
AEUAWABDAEUATAAALVwAUgBlAHAAbwByAHQAZQBFAHgAYwBlAGwAdABlAHMAdAAxAC4AeABsAHMA
AAdHAEUAVAAAcVMAVABfADQAOABmADYANgA1AGMANQBjAGUANwBmADQAOABjADEAYQBlADcAYQBi
ADYANgA0ADQAMwAwAGUANgAyADQAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAA5Ek54qtrsEG+AAwVy1BZ1gAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQYHAw4O
ET0EIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAARPQQgAQ4OBQABDh0OBQACDg4OCQcECB0FEkES
RQogAwEOEYCBEYCFBgABEoCJDgUAABKAkQYgAQESgJEFIAASgJUEIAASRQUgAQESRQcgAwgdBQgI
ByADAR0FCAgIAAESgKERgKUFIAASgKkHIAIBDhKAqQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEA
AAADBhJVAwYSWQMGEhACBggDBhEUBiADAQ4ODgQAABJVBAAAElkFAAEBElkEAAASEAMAAAEECAAS
VQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzQ4ZjY2NWM1Y2U3ZjQ4YzFhZTdhYjY2NDQzMGU2MjQxAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0u
UmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0
dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291
cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGAyAAAAAAAAAAAA
AHoyAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1z
Y29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAKYBXHAAAAQApgFccPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0ADgAZgA2ADYANQBjADUAYwBlADcAZgA0ADgAYwAxAGEAZQA3AGEAYgA2ADYANAA0
ADMAMABlADYAMgA0ADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAyADUANQAuADMAMgA4ADAAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA0ADgAZgA2ADYANQBjADUAYwBlADcAZgA0ADgAYwAxAGEAZQA3AGEAYgA2ADYANAA0ADMA
MABlADYAMgA0ADEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQAOABmADYANgA1AGMANQBjAGUANwBmADQAOABjADEAYQBlADcAYQBiADYA
NgA0ADQAMwAwAGUANgAyADQAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0ADgAZgA2ADYANQBjADUAYwBlADcAZgA0ADgAYwAxAGEAZQA3AGEAYgA2ADYA
NAA0ADMAMABlADYAMgA0ADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMgA1ADUALgAzADIAOAAwADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMgA1ADUALgAzADIAOAAwADkAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAjDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
          <Breakpoint
            Enabled="True"
            File="ScriptMain.cs"
            Line="111"
            Column="13" />
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\ejecutar SSRS"
          TopLeft="457,111" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>