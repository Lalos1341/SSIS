<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/31/2019 5:00:21 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MEXSIST006"
  DTS:CreatorName="MEXSIST006\emiranda"
  DTS:DTSID="{0D4EAA7B-3B4A-48B9-B26B-BC15E3894B91}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2058"
  DTS:ObjectName="XMLToFTP"
  DTS:PackageType="5"
  DTS:VersionBuild="112"
  DTS:VersionGUID="{58073B21-EAA0-4A12-B8DD-85462BB82594}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.SacDB.sa2alterno]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{6596A706-8F7C-4BC1-800D-93A5B05F8868}"
      DTS:ObjectName="localhost.SacDB.sa2alterno">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;User ID=sa2alterno;Initial Catalog=SacDB;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAjj3SHzngfU+fxdQdKlcAagAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAB5QRKXZ7e9SQBot0HozVkkalNZYeNofDfWbfvKLm/npgAAAAAOgAAAAAIAACAAAAD0OiUDoCSrlMu0ehjLaRnyOyxbnq9976pHeV80C8elDyAAAADksqWzUcW2oTmwPc3fwEgd4UndVPKpwmGav3XR1YjxD0AAAAC8ap91W87QPycW12mDE5ED4RRRVrEOXymEv94OJbEkpoBV0IZB86Y7I6HAyRbrM6Qb6SefIUm2M81AAx+DbcAO</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C6DB81DA-36E4-4043-8592-DA5D1C0B2FA0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FTPPass">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{65062A7D-C2CB-432E-8D6A-5F14560B1841}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FTPPort">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3185E95D-5978-463B-A546-77A795BFAF67}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FTPServer">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB51F72B-C7C1-4267-A728-7D8C8EDAFB10}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FTPUser">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A5407C4-1684-40AC-BADD-A7C839E78CDB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathLocal">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SP"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{09F2CD91-D4CE-42F9-AB3E-641AF86C64AA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SP"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6596A706-8F7C-4BC1-800D-93A5B05F8868}"
          SQLTask:BypassPrepare="False"
          SQLTask:SqlStatementSource="EXECUTE SACsp_SacWeb_Reporteador_ControlGastoXMLEjecuta ? OUTPUT, ? OUTPUT, ? OUTPUT, ? OUTPUT, ? OUTPUT" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::FTPServer"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::FTPUser"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="2"
            SQLTask:DtsVariableName="User::FTPPass"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="50" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="3"
            SQLTask:DtsVariableName="User::FTPPort"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="2"
            SQLTask:ParameterSize="0" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="4"
            SQLTask:DtsVariableName="User::PathLocal"
            SQLTask:ParameterDirection="Output"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="250" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Operation FTP_Mail"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Carga a FTP y envio de mail"
      DTS:DTSID="{739AF5AD-D4E5-48C5-935F-82208CD32D99}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Operation FTP_Mail"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Operation FTP_Mail.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{86E52A69-3284-463E-B2E7-04505AD8CD27}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="La propiedad de propagación del evento"
              DTS:DTSID="{AD616F12-7DEC-4DC4-8822-36E961AD9F72}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Operation FTP_Mail.EventHandlers[OnError]\Tarea Script"
              DTS:CreationName="Microsoft.ScriptTask"
              DTS:Description="Tarea Script"
              DTS:DTSID="{5991CCD2-6C09-4111-A2DA-78EB87FBB090}"
              DTS:ExecutableType="Microsoft.ScriptTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Tarea Script">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c1776c7acfc449b1a3de04470e96e8fd"
                  VSTAMajorVersion="14"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="System::ErrorDescription">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Settings.get_Default():ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Sett" +
    "ings")]

namespace ST_c1776c7acfc449b1a3de04470e96e8fd.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_c1776c7acfc449b1a3de04470e96e8fd
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MailMessage msg = new MailMessage("noreplyapp@intertraffic.com.mx", "aplicaciones@intertraffic.com.mx", "Generacion de XML y conexion con FTP", "Resultado Operacion: " + Dts.Variables["System::ErrorDescription"].Value.ToString());
            var cliente = new SmtpClient("intertraffic.com.mx")
            {
                Credentials = new NetworkCredential("noreplyapp@intertraffic.com.mx", "+*vMf9bHpd}.@kRt"),
                Port = 587,
                EnableSsl = false
            };
            cliente.Send(msg);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c1776c7acfc449b1a3de04470e96e8fd.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{335cf54f-2c79-4f73-bc24-071aea8b2d0e}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c1776c7acfc449b1a3de04470e96e8fd</RootNamespace>
    <AssemblyName>ST_c1776c7acfc449b1a3de04470e96e8fd</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c1776c7acfc449b1a3de04470e96e8fd</msb:CodeName>
		<msb:DisplayName>ST_c1776c7acfc449b1a3de04470e96e8fd</msb:DisplayName>
		<msb:ProjectId>{128A7C57-D458-4087-9A4D-32BDA3F73121}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c1776c7acfc449b1a3de04470e96e8fd.csproj"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c1776c7acfc449b1a3de04470e96e8fd")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c1776c7acfc449b1a3de04470e96e8fd")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c1776c7acfc449b1a3de04470e96e8fd.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c1776c7acfc449b1a3de04470e96e8fd.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c1776c7acfc449b1a3de04470e96e8fd.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK8m3F0AAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAMjAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAvAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
MAAAAAAAAEgAAAACAAUARCEAAOQNAAABAAAAAAAAACgvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBgCCAAAAAQAAEXIBAABwcj8AAHBygQAAcHLLAABwAigQ
AAAKbxEAAApy9wAAcG8SAAAKbxMAAApvFAAACigVAAAKcxYAAAoKcikBAHBzFwAACiVyAQAAcHJR
AQBwcxgAAApvGQAACiUgSwIAAG8aAAAKJRZvGwAACgZvHAAACgIoEAAAChZvHQAACioeAigeAAAK
Kh4CKB8AAAoqrn4BAAAELR5ycwEAcNADAAACKCAAAApvIQAACnMiAAAKgAEAAAR+AQAABCoafgIA
AAQqHgKAAgAABCoafgMAAAQqHgIoIwAACioucwgAAAaAAwAABCpCU0pCAQABAAAAAAAMAAAAdjQu
MC4zMDMxOQAAAAAFAGwAAAAMBAAAI34AAHgEAADoBQAAI1N0cmluZ3MAAAAAYAoAAOgBAAAjVVMA
SAwAABAAAAAjR1VJRAAAAFgMAACMAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAAB
AAAAIgAAAAUAAAAGAAAACQAAAAEAAAAjAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQA
AAABAAAAAQAAAAAAqAMBAAAAAAAGADYChgQGAMUChgQGAIIBcwQPAPoEAAAGAK8BNAQGABkCNAQG
APoBNAQGAKwCNAQGAFYCNAQGAG8CNAQGAMYBNAQGAOEB8wIKAIoCNQMKAAEBNQMOAHMAmAMGAO4D
5wMGAGUBcwQGAIQF5wMGAFYEpgQGAEYEHwQOADUBggMOAJYBggMOAB0BCgQGAEoBhgQKAHADNQMS
ADwFrAASAH8ArAAGAA8D5wMOALEFmAMOAF4DiwUOAMUFiwUGAMwA5wMGAIgA5wMGANwFNAQAAAAA
AQAAAAAAAQABAAEAEAD/AzoAOQABAAEAAAAQAK0ECQVJAAEAAwAAARAARgUJBV0AAwAHAAMBAABv
BQAAQQAEAAoAEQDzA5AAEQDxAJQAEQBjAJgABgYpAJwAVoBfBZ8AVoDRAJ8AUCAAAAAAhgAFBAYA
AQDeIAAAAACGGGYEBgABAOYgAAAAAIMYZgQGAAEA7iAAAAAAkwhSBKMAAQAaIQAAAACTCNkAqAAB
ACEhAAAAAJMI5QCtAAEAKSEAAAAAlgiWBbMAAgAwIQAAAACGGGYEBgACADghAAAAAJEYbAS4AAIA
AAABAO0CCQBmBAEAEQBmBAYAGQBmBAoAKQBmBBAAMQBmBBAAOQBmBBAAQQBmBBAASQBmBBAAUQBm
BBAAWQBmBBAAYQBmBBAAaQBmBAYAiQBmBAYAsQBmBBUAwQBmBAYAcQBnBSAAyQA4BSUA0QDeAyoA
2QDjAjAAkQANAzQA4QB9BTgAeQBmBD4A6QBmBBAA8QBmBEYA6QBPBUwA6QC8BQEA6QDQA1IA6QBe
AFcAyQCiBQEAcQBmBAYAkQBmBAYAAQGaAF0AAQHYBWYAmQBmBGwAuQBmBAYACAAUAIYACAAYAIsA
KQBzAPMALgALAMsALgATANQALgAbAPMALgAjAPwALgArACUBLgAzACUBLgA7ACUBLgBDAPwALgBL
ACsBLgBTACUBLgBbAEIBQwBjAIsASQBzAPMAYQB7AIsAYwBrAIsAGwADAAEABAADAAAAVgS8AAAA
+QDBAAAAmgXGAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAAZBxnXAAAAAAAADoAAAAE
AAAAAAAAAAAAAAB0ADEAAAAAAA0AAAAAAAAAAAAAAH0AFgMAAAAABAAAAAAAAAAAAAAAdADnAwAA
AAANAAAAAAAAAAAAAAB9AAoAAAAAAAAAAAABAAAAtwQAAAUAAgAAAAAAADxNb2R1bGU+AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFNUX2MxNzc2YzdhY2Zj
NDQ5YjFhM2RlMDQ0NzBlOTZlOGZkAFNlbmQAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAFZh
cmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55
QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtD
cmVkZW50aWFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0u
TmV0Lk1haWwAU1RfYzE3NzZjN2FjZmM0NDliMWEzZGUwNDQ3MGU5NmU4ZmQuZGxsAHNldF9FbmFi
bGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0
dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3Rp
Y3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2Mx
Nzc2YzdhY2ZjNDQ5YjFhM2RlMDQ0NzBlOTZlOGZkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9jMTc3NmM3YWNmYzQ0OWIxYTNkZTA0NDcwZTk2ZThmZC5Q
cm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAc2V0X0NyZWRlbnRpYWxzAFN1Y2Nlc3MA
Z2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVs
dABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AHNldF9Qb3J0AElDcmVkZW50aWFsc0J5SG9zdABn
ZXRfQXNzZW1ibHkAAAAAAD1uAG8AcgBlAHAAbAB5AGEAcABwAEAAaQBuAHQAZQByAHQAcgBhAGYA
ZgBpAGMALgBjAG8AbQAuAG0AeAAAQWEAcABsAGkAYwBhAGMAaQBvAG4AZQBzAEAAaQBuAHQAZQBy
AHQAcgBhAGYAZgBpAGMALgBjAG8AbQAuAG0AeAAASUcAZQBuAGUAcgBhAGMAaQBvAG4AIABkAGUA
IABYAE0ATAAgAHkAIABjAG8AbgBlAHgAaQBvAG4AIABjAG8AbgAgAEYAVABQAAArUgBlAHMAdQBs
AHQAYQBkAG8AIABPAHAAZQByAGEAYwBpAG8AbgA6ACAAADFTAHkAcwB0AGUAbQA6ADoARQByAHIA
bwByAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAJ2kAbgB0AGUAcgB0AHIAYQBmAGYAaQBjAC4AYwBv
AG0ALgBtAHgAACErACoAdgBNAGYAOQBiAEgAcABkAH0ALgBAAGsAUgB0AABxUwBUAF8AYwAxADcA
NwA2AGMANwBhAGMAZgBjADQANAA5AGIAMQBhADMAZABlADAANAA0ADcAMABlADkANgBlADgAZgBk
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAD7YieOhFrDQ4+H
UzCDQjhhAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVBAcBEj0EIAASZQQgABJpBSABEm0cAyAA
HAMgAA4FAAIODg4HIAQBDg4ODgUgAgEODgUgAQESfQQgAQECBSABARI9CAABEoCBEYCFBSAAEoCJ
ByACAQ4SgIkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElEDBhIQAgYIAwYRFAQA
ABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2MxNzc2YzdhY2ZjNDQ5YjFhM2Rl
MDQ0NzBlOTZlOGZkAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC41tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAAgwAAAAAAAAAAAAACIwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU
MAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAGdcZBwAAAEAZ1xkHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8AYwAxADcANwA2AGMANwBhAGMAZgBjADQANAA5AGIAMQBhADMAZABlADAANAA0ADcA
MABlADkANgBlADgAZgBkAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADcAMgA2ADgALgAyADMANgA1ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBUAF8AYwAxADcANwA2AGMANwBhAGMAZgBjADQANAA5AGIAMQBhADMAZABlADAANAA0ADcAMABl
ADkANgBlADgAZgBkAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAFQAXwBjADEANwA3ADYAYwA3AGEAYwBmAGMANAA0ADkAYgAxAGEAMwBkAGUAMAA0
ADQANwAwAGUAOQA2AGUAOABmAGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBUAF8AYwAxADcANwA2AGMANwBhAGMAZgBjADQANAA5AGIAMQBhADMAZABlADAANAA0
ADcAMABlADkANgBlADgAZgBkAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADIANgA4AC4AMgAzADYANQA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADIANgA4AC4AMgAzADYANQA1AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADQwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_22bfdd8bc04b48ed962f69dd9ac01275"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FTPPass,User::FTPPort,User::FTPServer,User::FTPUser,User::PathLocal">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Settings.get_Default():ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Sett" +
    "ings")]

namespace ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_22bfdd8bc04b48ed962f69dd9ac01275.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4899f728-a8c3-4498-9763-2c79ce1ca3a3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_22bfdd8bc04b48ed962f69dd9ac01275</RootNamespace>
    <AssemblyName>ST_22bfdd8bc04b48ed962f69dd9ac01275</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net;
using System.IO;
using System.Linq;
using System.Net.Mail;
using System.Collections.Generic;
using System.Text;
using System.Net.Mime;
#endregion

namespace ST_22bfdd8bc04b48ed962f69dd9ac01275
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Rama de pruebas 
            //rama de pruebas con cambios finales 
            //cambio esperando reparacion de error que se tiene en master
            //var x = Dts.Variables["User::FTPServer"].Value;
            var Files = Directory.GetFiles(Dts.Variables["User::PathLocal"].Value.ToString() + "\\", "*.xml").Select(f => System.IO.Path.GetFileName(f)).ToList();

            MessageBox.Show("entra a script");
            //MessageBox.Show("Path a buscar " + Dts.Variables["User::PathLocal"].Value.ToString());

            //EnviarCorreo(new List<string>() { "emiranda@intertraffic.com.mx" }, new List<string>(), new List<string>(), "correo de XMl", "prueba", new List<string>(), "intertraffic.com.mx", "facturacionmx@intertraffic.com.mx", "facturacionmx", "NSacFE33", 587, true);
            //Dts.TaskResult = (int)ScriptResults.Success;

            if (!Files.Any())
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            else
            {
                foreach (string file in Files)
                {
                    MessageBox.Show("Archivo a subir " + file);
                    //cargo archivo
                    UploadFile(Dts.Variables["User::PathLocal"].Value.ToString() + file, Dts.Variables["User::FTPUser"].Value.ToString(), Dts.Variables["User::FTPPass"].Value.ToString(), file, Dts.Variables["User::FTPServer"].Value.ToString(), Dts.Variables["User::FTPPort"].Value.ToString());
                    //borro archivo local
                    File.Delete(Dts.Variables["User::PathLocal"].Value.ToString() + file);
                }
                EnviarCorreo(new List<string>() { "emiranda@intertraffic.com.mx" }, new List<string>(), new List<string>(), "correo de XMl", "prueba", new List<string>(), "intertraffic.com.mx", "facturacionmx@intertraffic.com.mx", "facturacionmx", "NSacFE33", 587, true);

                //    //EnviarCorreo(true);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
        }

        private void UploadFile(string FilePath, string Login, string Password, string fileName, string Server, string  Port)
        {
            try
            {
                using (FileStream fs = File.Open(FilePath, FileMode.OpenOrCreate, FileAccess.Read))
                {
                    FtpWebRequest ftp = (FtpWebRequest)FtpWebRequest.Create("ftp://" + Server + ":" + Port + "/" + fileName);
                    ftp.Credentials = new NetworkCredential(Login, Password);
                    ftp.KeepAlive = true;//verificar si es funcional
                    ftp.Method = WebRequestMethods.Ftp.UploadFile;
                    ftp.UseBinary = true;
                    ftp.ContentLength = fs.Length;
                    ftp.Proxy = null;
                    //ftp.EnableSsl = true;//verificar
                    ftp.UsePassive = true;
                    //ftp.EnableSsl = //2211 explicito
                    byte[] buff = new byte[fs.Length];
                    fs.Read(buff, 0, buff.Length);
                    fs.Close();
                    Stream ftpstream = ftp.GetRequestStream();
                    ftpstream.Write(buff, 0, buff.Length);
                    ftpstream.Close();
                }
            }
            catch (Exception ex)
            {
                //Console.WriteLine(ex.Message);
            }

        }

        private bool EnviarCorreo(List<string> pDestinatarios, List<string> pCC, List<string> pCCO, string pTituloMail,
            string pMensaje, List<string> Archivos, string pSMTP, string pCorreo, string pUser, string pPass, int pPuerto, bool pEnableSSL)
        {
            //MailMessage msg = new MailMessage("noreplyapp@intertraffic.com.mx", "aplicaciones@intertraffic.com.mx", "Generacion de XML y conexion con FTP", "Resultado Operacion: " + pResultado);
            //var cliente = new SmtpClient("intertraffic.com.mx")
            //{
            //    Credentials = new NetworkCredential("noreplyapp@intertraffic.com.mx", "+*vMf9bHpd}.@kRt"),
            //    Port = 587,
            //    EnableSsl = false
            //};
            //cliente.Send(msg);

            var vDestinatario = string.Empty;
            var vCC = string.Empty;
            var vCCO = string.Empty;

            foreach (var mail in pDestinatarios)
                vDestinatario = vDestinatario + "," + mail;

            foreach (var mail in pCC)
                vCC = vCC + "," + mail;

            foreach (var mail in pCCO)
                vCCO = vCCO + "," + mail;

            var cliente = new SmtpClient(pSMTP)
            {
                Credentials = new NetworkCredential(pUser, pPass),
                Port = pPuerto,
                EnableSsl = pEnableSSL
            };

            // Add the file attachment to this e-mail message.
            if (string.IsNullOrEmpty(vDestinatario)) return false;

            var htmlView = AlternateView.CreateAlternateViewFromString(pMensaje, null, MediaTypeNames.Text.Html);
            //var mensaje = new MailMessage("noreply@intertraffic.com.mx", vDestinatario.Trim(), pTituloMail, pMensaje)
            var mensaje = new MailMessage(pCorreo, vDestinatario.Trim(), pTituloMail, "prueba");
            mensaje.BodyEncoding = Encoding.UTF8;

            if (!string.IsNullOrEmpty(vCC)) mensaje.CC.Add(vCC);

            if (!string.IsNullOrEmpty(vCCO)) mensaje.Bcc.Add(vCCO);

            mensaje.AlternateViews.Add(htmlView);

            if (Archivos != null)
                foreach (var archivo in Archivos)
                    if (File.Exists(archivo))
                        mensaje.Attachments.Add(new Attachment(archivo));

            try
            {
                cliente.Send(mensaje);
                mensaje.Attachments.Dispose();
                cliente.Dispose();
                cliente = null;
                return true;
            }
            catch (Exception ex)
            {
                mensaje.Attachments.Clear();
                cliente = null;
                return false;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_22bfdd8bc04b48ed962f69dd9ac01275</msb:CodeName>
		<msb:DisplayName>ST_22bfdd8bc04b48ed962f69dd9ac01275</msb:DisplayName>
		<msb:ProjectId>{26ED8AF3-3C0A-43FB-B768-57FDBBF0B2DA}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_22bfdd8bc04b48ed962f69dd9ac01275.csproj"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_22bfdd8bc04b48ed962f69dd9ac01275")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_22bfdd8bc04b48ed962f69dd9ac01275")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_22bfdd8bc04b48ed962f69dd9ac01275.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_22bfdd8bc04b48ed962f69dd9ac01275.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAExt3V0AAAAAAAAAAOAAIiALATAAAB4AAAAIAAAAAAAAuj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGg9AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
PQAAAAAAAEgAAAACAAUA8CUAAMAWAAABAAAAAAAAALA8AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswDQDnAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAApyIQAAcCgVAAAKciUAAHAoFgAACn4IAAAEJS0XJn4HAAAE/gYOAAAGcxcAAAolgAgA
AAQoAQAAKygCAAArCnIxAABwKBoAAAomBigDAAArLQ0CKBAAAAoXbxwAAAoqBm8dAAAKCzjrAAAA
EgEoHgAACgxyTwAAcAgoFQAACigaAAAKJgICKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAK
CCgVAAAKAigQAAAKbxEAAApycQAAcG8SAAAKbxMAAApvFAAACgIoEAAACm8RAAAKco0AAHBvEgAA
Cm8TAAAKbxQAAAoIAigQAAAKbxEAAApyqQAAcG8SAAAKbxMAAApvFAAACgIoEAAACm8RAAAKcskA
AHBvEgAACm8TAAAKbxQAAAooAgAABgIoEAAACm8RAAAKcgEAAHBvEgAACm8TAAAKbxQAAAoIKBUA
AAooHwAAChIBKCAAAAo6Cf///94OEgH+FgMAABtvIQAACtwCcyIAAAolcuUAAHBvIwAACnMiAAAK
cyIAAApyHwEAcHI7AQBwcyIAAApySQEAcHJxAQBwcrUBAHBy0QEAcCBLAgAAFygDAAAGJgIoEAAA
ChZvHAAACioAARAAAAIAhAD+ggEOAAAAABswBQDLAAAAAgAAEQMaFygkAAAKChyNIwAAASUWcuMB
AHCiJRcOBaIlGHLxAQBwoiUZDgaiJRpy9QEAcKIlGw4EoiglAAAKKCYAAAp0LgAAASUEBXMnAAAK
bygAAAolF28pAAAKJXL5AQBwbyoAAAolF28rAAAKJQZvLAAACm8tAAAKJRRvLgAACiUXby8AAAoG
bywAAArUjTMAAAELBgcWB45pbzAAAAomBm8xAAAKbzIAAAolBxYHjmlvMwAACm8xAAAK3goGLAYG
byEAAArc3gMm3gAqAAEcAAACAAkAsrsACgAAAAAAAAAAx8cAAxIAAAEbMAQA4AEAAAMAABF+NAAA
Cgp+NAAACgt+NAAACgwDbx0AAAoTBisXEgYoHgAAChMHBnIDAgBwEQcoNQAACgoSBiggAAAKLeDe
DhIG/hYDAAAbbyEAAArcBG8dAAAKEwYrFxIGKB4AAAoTCAdyAwIAcBEIKDUAAAoLEgYoIAAACi3g
3g4SBv4WAwAAG28hAAAK3AVvHQAAChMGKxcSBigeAAAKEwkIcgMCAHARCSg1AAAKDBIGKCAAAAot
4N4OEgb+FgMAABtvIQAACtwOB3M2AAAKJQ4JDgpzJwAACm83AAAKJQ4LbzgAAAolDgxvOQAACg0G
KDoAAAosAhYqDgUUcgcCAHAoOwAAChMEDggGbzwAAAoOBHI7AQBwcz0AAAoTBREFKD4AAApvPwAA
CgcoOgAACi0NEQVvQAAACgdvQQAACggoOgAACi0NEQVvQgAACghvQQAAChEFb0MAAAoRBG9EAAAK
DgYsSQ4Gbx0AAAoTBislEgYoHgAAChMKEQooRQAACiwTEQVvRgAAChEKc0cAAApvSAAAChIGKCAA
AAot0t4OEgb+FgMAABtvIQAACtwACREFb0kAAAoRBW9GAAAKb0oAAAoJb0sAAAoUDRcTC94UJhEF
b0YAAApvTAAAChQNFhML3gARCyoBQAAAAgAaACQ+AA4AAAAAAgBUACR4AA4AAAAAAgCOACSyAA4A
AAAAAgBnATKZAQ4AAAAAAACoASHJARQSAAABHgIoTQAACioeAihOAAAKKq5+AQAABC0echsCAHDQ
AwAAAihPAAAKb1AAAApzUQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKFIA
AAoqLnMKAAAGgAMAAAQqLnMNAAAGgAcAAAQqHgMoUwAACioAAEJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAPgGAAAjfgAAZAcAALAJAAAjU3RyaW5ncwAAAAAUEQAAkAIAACNVUwCk
EwAAEAAAACNHVUlEAAAAtBMAAAwDAAAjQmxvYgAAAAAAAAACAAABVx2iCQkLAAAA+gEzABYAAAEA
AAA+AAAABgAAAAgAAAAOAAAAFAAAAFMAAAACAAAAEQAAAAMAAAACAAAAAwAAAAQAAAAFAAAAAQAA
AAYAAAABAAAAAgAAAAMAAAAAAH4FAQAAAAAABgBoAx8HBgD3Ax8HBgC0AgwHDwCTBwAABgDhAjYG
BgBLAzYGBgAsAzYGBgDeAzYGBgCIAzYGBgChAzYGBgD4AjYGBgATA1oECgC8A+AECgARAuAEBgAy
AOEAPwD0BgAABgC0BZUABgCLBtkFDgDcCGIFDgBECWIFDgA3AWIFBgDlBdkFBgB8Ah8HBgCbCNkF
BgA5ANkFBgCXAgwHBgDUBj8HBgCqBiEGDgBaAkwFDgDIAkwFDgAtAgwGCgA6BeAEEgDVB7ABEgBM
AbABBgCUBNkFBgCBCZUAFgBVAb4GBgAXAOEAGgBXCQ4IGgDACA4IBgCWAZUABgBgAdkFBgAuAZUA
BgBBCJUADgAKCakIDgAHCakIDgAJBakIDgDxB6kIBgDJBZUADgCjCakIBgAVBNkFDgAcCakIBgBR
BDgJDgBIBmIFDgBzBmIFBgAlABsFDgBeBmIFDgDnCGIFBgDQAdkFBgBsAdkFBgBmCTYGBgCfBJUA
AAAAAHEAAAAAAAEAAQABABAA+wVAADkAAQABAAAAEABGB6IHYQABAAUAAAEQAOgHogd9AAMACQAD
AQAAXAgAAFkABAAMAAMhEADVAAAAYQAHAAwAEQDqBdIBEQABAtYBEQAeAdoBBgbEAN4BVoBMCOEB
VoDhAeEBNgBtAOUBFgABAOkBUCAAAAAAhgABBgYAAQBUIgAAAACBAJAB8QEBAEgjAAAAAIEAnQb7
AQcAdCUAAAAAhhj/BgYAEwB8JQAAAACDGP8GBgATAIQlAAAAAJMI0AYbAhMAsCUAAAAAkwjpASAC
EwC3JQAAAACTCPUBJQITAL8lAAAAAJYItAgrAhQAxiUAAAAAhhj/BgYAFADOJQAAAACRGAUHMAIU
ANolAAAAAJEYBQcwAhQAfCUAAAAAhhj/BgYAFADmJQAAAACDAAoANAIUAAAAAQCbBAAAAgAGBgAA
AwAVAQAABACnAQAABQDqBgAABgACCQAAAQAjCAAAAgCBAAAAAwCQAAAABAByBQAABQBDAQAABgAy
CAAABwCfAAAACACVBgAACQDkBgAACgA7CAAACwC2BgAADACFAAAAAQAkBAAAAQBHBAkA/wYBABEA
/wYGABkA/wYKACkA/wYQADEA/wYQADkA/wYQAEEA/wYQAEkA/wYQAFEA/wYQAFkA/wYQAGEA/wYQ
AGkA/wYGALkA/wYGANEA/wYGAPEA/wYVAHEAVAgpAAEB0QcvAAkB0AU1ABEBGgQ8AMEAkgRAABkB
lAhEACEB3wdKAAwA/wZYACkBogheACkBFQl9ADkBUgmSACkBbwmZAAEBzQgBABQA8QarABwA8gi6
AEkBbwK/ABwALwnEAFEBSwIGABQA/wYGABQAAQHIAEkB9gXVABkBlAjhAGkBUwLnAHkB/wbuAGkB
/gf0AHEBKgT7AGkBCgEQAHEBcwn7AIkBpAQAAWkBrwQEAWkBmQkJAXEBOAT7AIkB/AAQAYkBRQIG
AGkBvwUYAYkBdgIeARkBkwk8ARkBlAg/AZkA/wYQAJkA/gdGAZkA/ggBAJkApgX7ABkBiwlNAaEA
dARSARkB4AVAAKkA/wZcAakBZABkAakASQRqAakAegBxAbEBAQEQAKkA2QBxAakAgQh3ASQAAQHI
AEkBeghNAakAagiFAdEB/wYQACwAAQHIAJkABQGUAckBSwIGAJkASwIGACwAygYGAHEA/wYGAMEA
/wYGANkBfgGaAdkBYgmjAdkA/wapAfkA/wYGAPEBmwGxAQgAFADIAQgAGADNASkAewBwAi4ACwBI
Ai4AEwBRAi4AGwBwAi4AIwB5Ai4AKwCiAi4AMwCiAi4AOwCiAi4AQwB5Ai4ASwCoAi4AUwCiAi4A
WwC/AkMAYwDNAUkAewBwAmEAawDNAWMAcwDNAcMAawDNARsAzgAmAQMAAQAEAAMAAADUBjkCAAAJ
Aj4CAAC4CEMCAgAGAAMAAgAHAAUAAQAIAAUAAgAJAAcAUQClALQAfQGLAQSAAAABAAAAZRz1VgAA
AAAAAEAAAAAEAAAAAAAAAAAAAAC2AcwAAAAAAA0AAAAAAAAAAAAAAL8BwQQAAAAABAAAAAAAAAAA
AAAAtgHZBQAAAAANAAAAAAAAAAAAAAC/AaUAAAAAAAQAAAAAAAAAAAAAALYB1QEAAAAABAAAAAAA
AAAAAAAAtgEOCAAAAAAAAAAAAQAAAFAHAAAFAAIABgACADEAeAAzAI4ANwCOAAAAADw+OV9fMF8w
ADxNYWluPmJfXzBfMABJRW51bWVyYWJsZWAxAENvbGxlY3Rpb25gMQBMaXN0YDEARnVuY2AyAFNU
XzIyYmZkZDhiYzA0YjQ4ZWQ5NjJmNjlkZDlhYzAxMjc1AGdldF9VVEY4ADw+OQA8TW9kdWxlPgBn
ZXRfQ0MAcENDAHBFbmFibGVTU0wAcENDTwBTeXN0ZW0uSU8AcFNNVFAATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAPD5jAGdldF9CY2MAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAUmVhZABBZGQAU2VuZABzZXRfTWV0aG9kAFBhc3N3b3JkAGRlZmF1bHRJ
bnN0YW5jZQBGaWxlTW9kZQBNYWlsTWVzc2FnZQBwTWVuc2FqZQBWYXJpYWJsZQBFbnVtZXJhYmxl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFVwbG9hZEZp
bGUAR2V0RmlsZU5hbWUAZmlsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBU
eXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBDbG9zZQBEaXNwb3NlAENyZWF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAV3JpdGUA
Q29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBE
ZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxl
QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0
dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAEJ5dGUAZ2V0X1ZhbHVlAHZhbHVlAHNldF9LZWVwQWxpdmUAc2V0X1VzZVBhc3Np
dmUAZgBzZXRfQm9keUVuY29kaW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAQ3JlYXRlQWx0
ZXJuYXRlVmlld0Zyb21TdHJpbmcAVG9TdHJpbmcARmlsZVBhdGgAZ2V0X0xlbmd0aABzZXRfQ29u
dGVudExlbmd0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVudGlhbABTeXN0ZW0uQ29sbGVj
dGlvbnMuT2JqZWN0TW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFN5c3RlbS5OZXQuTWFpbABwVGl0dWxvTWFpbABTVF8yMmJmZGQ4YmMwNGI0OGVkOTYyZjY5ZGQ5
YWMwMTI3NS5kbGwAc2V0X0VuYWJsZVNzbABGaWxlU3RyZWFtAEdldFJlcXVlc3RTdHJlYW0AZ2V0
X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4ATG9naW4A
U3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rp
b24ATWFpbEFkZHJlc3NDb2xsZWN0aW9uAEF0dGFjaG1lbnRDb2xsZWN0aW9uAEFsdGVybmF0ZVZp
ZXdDb2xsZWN0aW9uAEV4Y2VwdGlvbgBwQ29ycmVvAEVudmlhckNvcnJlbwBDdWx0dXJlSW5mbwBw
UHVlcnRvAFN5c3RlbS5MaW5xAENsZWFyAGdldF9SZXNvdXJjZU1hbmFnZXIAcFVzZXIAU2VydmVy
AEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMjJiZmRkOGJjMDRiNDhl
ZDk2MmY2OWRkOWFjMDEyNzUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUXzIyYmZkZDhiYzA0YjQ4ZWQ5NjJmNjlkZDlhYzAxMjc1LlByb3BlcnRpZXMAZ2V0
X1ZhcmlhYmxlcwBHZXRGaWxlcwBTZXR0aW5ncwBJQ3JlZGVudGlhbHMAc2V0X0NyZWRlbnRpYWxz
AFN5c3RlbS5XaW5kb3dzLkZvcm1zAHBEZXN0aW5hdGFyaW9zAEFyY2hpdm9zAHBQYXNzAEZpbGVB
Y2Nlc3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0F0dGFjaG1lbnRzAEV4aXN0
cwBnZXRfQWx0ZXJuYXRlVmlld3MAQ29uY2F0AE9iamVjdABTZWxlY3QAU3lzdGVtLk5ldABnZXRf
RGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABBdHRhY2htZW50
AGdldF9DdXJyZW50AHNldF9Qb3J0AEZ0cFdlYlJlcXVlc3QAVG9MaXN0AElDcmVkZW50aWFsc0J5
SG9zdABNb3ZlTmV4dABTeXN0ZW0uVGV4dABBbHRlcm5hdGVWaWV3AFNob3cATWVzc2FnZUJveABn
ZXRfQXNzZW1ibHkAQW55AHNldF9Vc2VCaW5hcnkARGlyZWN0b3J5AElzTnVsbE9yRW1wdHkAc2V0
X1Byb3h5AElXZWJQcm94eQAAAAAAH1UAcwBlAHIAOgA6AFAAYQB0AGgATABvAGMAYQBsAAADXAAA
CyoALgB4AG0AbAAAHWUAbgB0AHIAYQAgAGEAIABzAGMAcgBpAHAAdAAAIUEAcgBjAGgAaQB2AG8A
IABhACAAcwB1AGIAaQByACAAABtVAHMAZQByADoAOgBGAFQAUABVAHMAZQByAAAbVQBzAGUAcgA6
ADoARgBUAFAAUABhAHMAcwAAH1UAcwBlAHIAOgA6AEYAVABQAFMAZQByAHYAZQByAAAbVQBzAGUA
cgA6ADoARgBUAFAAUABvAHIAdAAAOWUAbQBpAHIAYQBuAGQAYQBAAGkAbgB0AGUAcgB0AHIAYQBm
AGYAaQBjAC4AYwBvAG0ALgBtAHgAABtjAG8AcgByAGUAbwAgAGQAZQAgAFgATQBsAAANcAByAHUA
ZQBiAGEAACdpAG4AdABlAHIAdAByAGEAZgBmAGkAYwAuAGMAbwBtAC4AbQB4AABDZgBhAGMAdAB1
AHIAYQBjAGkAbwBuAG0AeABAAGkAbgB0AGUAcgB0AHIAYQBmAGYAaQBjAC4AYwBvAG0ALgBtAHgA
ABtmAGEAYwB0AHUAcgBhAGMAaQBvAG4AbQB4AAARTgBTAGEAYwBGAEUAMwAzAAANZgB0AHAAOgAv
AC8AAAM6AAADLwAACVMAVABPAFIAAAMsAAATdABlAHgAdAAvAGgAdABtAGwAAHFTAFQAXwAyADIA
YgBmAGQAZAA4AGIAYwAwADQAYgA0ADgAZQBkADkANgAyAGYANgA5AGQAZAA5AGEAYwAwADEAMgA3
ADUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAIzXdT6xvSdF
nVO2hzeL8vgABCABAQgDIAABBSABARERBCABAQ4FIAEBEXUNBwMVEj0BDhURQQEODgUgABKAgQUg
ABKAhQYgARKAiRwDIAAcAyAADgUAAg4ODgYAAh0ODg4GFRJlAg4OBSACARwYGRACAhUSgJkBHgEV
EoCZAR4AFRJlAh4AHgEECgIODhAQAQEVEj0BHgAVEoCZAR4AAwoBDgYAARGAoQ4LEAEBAhUSgJkB
HgAFFRI9AQ4IIAAVEUEBEwAFFRFBAQ4EIAATAAQAAQEOAyAAAgUgAQETAAYHAhJFHQULAAMSRQ4R
gK0RgLEFAAEOHQ4GAAESgLUOBSACAQ4OBiABARKAwQQgAQECAyAACgQgAQEKBiABARKAyQcgAwgd
BQgIBSAAEoDFByADAR0FCAgVBwwODg4STRJRElUVEUEBDg4ODg4CAgYOBgADDg4ODgYgAQESgNEE
AAECDgkAAxJRDhKA1Q4HIAQBDg4ODgUAABKA1QYgAQESgNUFIAASgNkFIAASgN0HFRKA4QESUQUg
ABKA5QgVEoDhARKA6QUgAQESVQgAARKA7RGA8QUgABKA9QcgAgEOEoD1BAABDg4It3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAAAwYSbQMGEnEDBhIQAgYIAwYRFAMGEhgHBhUSZQIODgkgBgEODg4O
Dg4fIAwCFRI9AQ4VEj0BDhUSPQEODg4VEj0BDg4ODg4IAgQAABJtBAAAEnEFAAEBEnEEAAASEAMA
AAEEIAEODgQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU1RfMjJiZmRkOGJjMDRiNDhlZDk2MmY2OWRkOWFjMDEyNzUAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAkD0AAAAAAAAAAAAAqj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJw9AAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAPVWZRwAAAEA9VZlHD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0
AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4A
YQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBU
AF8AMgAyAGIAZgBkAGQAOABiAGMAMAA0AGIANAA4AGUAZAA5ADYAMgBmADYAOQBkAGQAOQBhAGMA
MAAxADIANwA1AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAMgA2
ADkALgAyADIAMgA2ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
MgAyAGIAZgBkAGQAOABiAGMAMAA0AGIANAA4AGUAZAA5ADYAMgBmADYAOQBkAGQAOQBhAGMAMAAx
ADIANwA1AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwAyADIAYgBmAGQAZAA4AGIAYwAwADQAYgA0ADgAZQBkADkANgAyAGYANgA5AGQAZAA5
AGEAYwAwADEAMgA3ADUALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AMgAyAGIAZgBkAGQAOABiAGMAMAA0AGIANAA4AGUAZAA5ADYAMgBmADYAOQBkAGQAOQBh
AGMAMAAxADIANwA1AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA3ADIANgA5AC4AMgAyADIANgAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA3ADIANgA5AC4AMgAyADIANgAxAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAALw9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{1738690E-3F9C-4FD6-B4FC-3394351BFA8C}"
      DTS:From="Package\Execute SP"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Operation FTP_Mail" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{BFD2EC8E-8023-42C5-9999-D1032A4F8D9D}"
      DTS:EventID="0"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="La propiedad de propagación del evento"
          DTS:DTSID="{DD2E79E2-786E-49B5-B14C-07C9379569CD}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="131,42"
          Id="Package\Execute SP"
          TopLeft="307.5,32.5" />
        <NodeLayout
          Size="171,42"
          Id="Package\Operation FTP_Mail"
          TopLeft="288,116" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="373.25,74.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.5"
              Start="0,0"
              End="0,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\Operation FTP_Mail.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Operation FTP_Mail.EventHandlers[OnError]\Tarea Script"
          TopLeft="416,75" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>